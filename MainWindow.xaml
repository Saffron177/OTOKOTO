<Window x:Class="HottoMotto.MainWindow"
        x:Name="Main_Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:HottoMotto"
        mc:Ignorable="d"
        Title="オトコト" Height="450" Width="800" MinWidth="800" MinHeight="450"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}">

    <Window.Resources>
        <Style x:Key="CActionButtons" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="50" Background="{TemplateBinding Background}" BorderThickness="1"  BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--マウスホバー時の処理-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--カーソルを手の形に変更-->
                                <Setter Property="Cursor" Value="Hand"/>
                                <!--背景を青に変更-->
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10"/>
        </Style>

        <!-- ダークモード切り替えボタン用のスタイル -->
        <Style x:Key="ThemeToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent" 
                        Padding="8" 
                        CornerRadius="25">
                            <Grid>
                                <materialDesign:PackIcon x:Name="Icon"
                       Kind="WeatherSunny"
                       Width="24"
                       Height="24"
                       Foreground="{DynamicResource IconBrushLight}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Icon" Property="Kind" Value="WeatherNight"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource IconBrushDark}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <!-- Grid.RowDefinitions と Grid.ColumnDefinitions -->
        <Grid.RowDefinitions>
            <RowDefinition Height="32*"/>
            <RowDefinition Height="85*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="35*"/>
            <RowDefinition Height="35*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="116*"/>
            <ColumnDefinition Width="27*"/>
            <ColumnDefinition Width="17*"/>
        </Grid.ColumnDefinitions>

        <!-- ダークモード切り替えボタン追加 -->
        <ToggleButton x:Name="ThemeToggleButton"
                      Style="{StaticResource ThemeToggleButton}"
                      Click="ThemeToggleButton_Click"
                      Grid.Column="2"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Margin="0,25,1,0" Checked="ThemeToggleButton_Checked" Height="38" Width="38" Grid.RowSpan="1" RenderTransformOrigin="0.5,0.5"/>

        <!-- 保存ボタン -->
        <Button x:Name="Button_Save" 
        Margin="0,32,42,0" 
        Click="Button_Save_Click" 
        BorderBrush="{x:Null}" 
        Background="{x:Null}" 
        Height="29" Width="29" 
        Grid.Column="2" 
        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
        Style="{StaticResource MaterialDesignIconButton}" 
        Foreground="{DynamicResource IconBrushLight}"
        materialDesign:RippleAssist.Feedback="Gray" 
        VerticalAlignment="Top" 
        HorizontalAlignment="Right">
            <materialDesign:PackIcon Kind="TrayArrowDown" Width="23" Height="23"/>
        </Button>

        <!-- ログ一覧ボタン -->
        <Button Margin="0,30,80,0" 
        Click="Button_Log_Click" 
        Height="29" Width="29" 
        BorderBrush="{x:Null}" 
        Background="{x:Null}" 
        Grid.Column="1" 
        Grid.ColumnSpan="2" 
        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
        Style="{StaticResource MaterialDesignIconButton}" 
        Foreground="{DynamicResource IconBrushLight}"
        materialDesign:RippleAssist.Feedback="Gray" 
        VerticalAlignment="Top" 
        HorizontalAlignment="Right">
            <materialDesign:PackIcon Kind="TextBoxOutline" Width="23" Height="23"/>
        </Button>


        <!-- ListBoxの部分 -->
        <ListBox x:Name="RealtimeListBox" 
         Margin="26,52,5,12"
         Padding="5,2,0,2"
         Style="{x:Null}" 
         RenderTransformOrigin="0.5,0.5"  
         BorderBrush="{DynamicResource MaterialDesignDivider}" 
         Background="{DynamicResource MaterialDesignPaper}"
         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
         Grid.RowSpan="4">
            <ListBox.Resources>
                <!-- Borderスタイル -->
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>

                <!-- スクロールバーのThumbスタイル -->
                <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="MinHeight" Value="50"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Background="{DynamicResource MaterialDesignScrollBarBackground}" 
                                CornerRadius="4"
                                MinHeight="50"
                                Margin="2,4,2,4"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- スクロールバーのページボタンスタイル -->
                <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="Transparent"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- スクロールバー全体のスタイル -->
                <Style x:Key="FadingScrollBarStyle" TargetType="{x:Type ScrollBar}">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="Margin" Value="0,2,2,2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="GridRoot">
                                    <Track x:Name="PART_Track" 
                           IsDirectionReversed="True">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand" 
                                        Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand" 
                                        Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- ScrollViewerのスタイル -->
                <Style x:Key="FadingScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollContentPresenter Grid.Column="0"/>
                                    <Border x:Name="PART_ScrollBarBorder" 
                            Grid.Column="1" 
                            Width="8"
                            Margin="0,1"
                            Background="Transparent">
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Value="{TemplateBinding VerticalOffset}"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Background="{DynamicResource MaterialDesignDivider}"
                                 Opacity="0">
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid>
                                                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                            <Track.Thumb>
                                                                <Thumb MinHeight="50">
                                                                    <Thumb.Template>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="{DynamicResource MaterialDesignBody}"
                                                                    CornerRadius="4"
                                                                    Margin="2,0"/>
                                                                        </ControlTemplate>
                                                                    </Thumb.Template>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <EventTrigger SourceName="PART_ScrollBarBorder" 
                                RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                    Storyboard.TargetName="PART_VerticalScrollBar"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger SourceName="PART_ScrollBarBorder" 
                                RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                    Storyboard.TargetName="PART_VerticalScrollBar"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0" Duration="0:0:0.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>

            <ListBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.028"/>
                    <TranslateTransform/>
                </TransformGroup>
            </ListBox.RenderTransform>

            <ListBox.Template>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                Background="{TemplateBinding Background}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
                        <ScrollViewer Style="{StaticResource FadingScrollViewerStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListBox.Template>

            <!-- ItemContainerStyleとItemTemplateと呪いの呪文 -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- フォーカス時の青枠を削除 -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSpeaker}" Value="False">
                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!--ボタンの幅はそのまま-->
                            <ColumnDefinition Width="Auto"/>
                            <!--テキストの幅は親要素(ListBox)の幅に依存-->
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!--再生ボタン-->
                        <Button Click="AudioButtonClick" BorderBrush="{x:Null}" Background="{x:Null}" Width="25" Height="25" Margin="0,0,0,5">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <!--デフォルトは右側で非表示-->
                                    <Setter Property="Grid.Column" Value="1"/>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <!--スピーカーの場合はボタンを左側にする-->
                                        <DataTrigger Binding="{Binding IsSpeaker}" Value="True">
                                            <Setter Property="Grid.Column" Value="0"/>
                                        </DataTrigger>
                                        <!--テキストの場合はボタンを表示する-->
                                        <DataTrigger Binding="{Binding IsComit}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <!--再生ボタンの画像-->
                            <Image x:Name="AudioButtonImage" Source="Resource/start.png" Width="Auto" Height="Auto"/>
                            <!--ButtonからImageを取得するためのタグ付け-->
                            <!--DataTemplate内はx:Nameでの参照ができないため必要-->
                            <Button.Tag>
                                <Binding ElementName="AudioButtonImage" />
                            </Button.Tag>
                        </Button>
                        <!--ボーダー(テキストの背景)-->
                        <Border CornerRadius="5">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <!-- デフォルトの背景(透明) -->
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <!--デフォルトの配置(左側)-->
                                    <Setter Property="Grid.Column" Value="0"/>
                                    <Style.Triggers>
                                        <!-- IsHighlightedがTrueのときに背景色を設定 -->
                                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ListBoxItemBackgroundBrush}" />
                                            <Setter Property="Padding" Value="8"/>
                                            <Setter Property="Margin" Value="0,0,0,5"/>
                                        </DataTrigger>
                                        <!-- スピーカーの場合は右側に配置 -->
                                        <DataTrigger Binding="{Binding IsSpeaker}" Value="True">
                                            <Setter Property="Grid.Column" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <!-- ログテキスト -->
                            <TextBlock Text="{Binding Text}" TextWrapping="Wrap" Foreground="{DynamicResource MaterialDesignBody}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <!-- デフォルトのフォントサイズ -->
                                        <Setter Property="FontSize" Value="10" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                                <!-- IsHighlightedがTrueのときフォントサイズを変更 -->
                                                <Setter Property="FontSize" Value="12" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>




        <ComboBox x:Name="ComboBox_AudioDevices"
          Margin="19,5,24,10"
          materialDesign:HintAssist.Hint="再生デバイスを選択"
          Style="{StaticResource MaterialDesignOutlinedComboBox}"
          Foreground="{DynamicResource ComboBoxForegroundBrush}"
          Background="{DynamicResource ComboBoxBackgroundBrush}"
          BorderBrush="{DynamicResource ComboBoxBorderBrush}"
          materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource ComboBoxUnderlineBrush}"
          VerticalAlignment="Stretch" 
          Grid.Column="1" 
          Grid.Row="4" 
          Grid.ColumnSpan="2">
            <ComboBox.Resources>
                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemForegroundBrush}"/>
                </Style>
            </ComboBox.Resources>
            <ComboBox.ToolTip>
                <ToolTip
            Style="{StaticResource MaterialDesignToolTip}"
            MaxWidth="300">
                    <StackPanel>
                        <TextBlock 
                    Text="再生デバイスの選択"
                    FontWeight="Bold"
                    Margin="0,0,0,4"/>
                        <TextBlock 
                    Text="音声を出力しているデバイスを選択" 
                    TextWrapping="Wrap"/>
                    </StackPanel>
                </ToolTip>
            </ComboBox.ToolTip>
        </ComboBox>

        <ComboBox x:Name="ComboBox_MicDevices"
          Margin="19,10,24,5"
          materialDesign:HintAssist.Hint="録音デバイスを選択"
          Style="{StaticResource MaterialDesignOutlinedComboBox}"
          Foreground="{DynamicResource ComboBoxForegroundBrush}"
          Background="{DynamicResource ComboBoxBackgroundBrush}"
          BorderBrush="{DynamicResource ComboBoxBorderBrush}"
          materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource ComboBoxUnderlineBrush}"
          VerticalAlignment="Stretch" 
          Grid.Column="1" 
          Grid.Row="3" 
          Grid.ColumnSpan="2">
            <ComboBox.Resources>
                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemForegroundBrush}"/>
                </Style>
            </ComboBox.Resources>
            <ComboBox.ToolTip>
                <ToolTip
            Style="{StaticResource MaterialDesignToolTip}"
            MaxWidth="300">
                    <StackPanel>
                        <TextBlock 
                    Text="録音デバイスの選択"
                    FontWeight="Bold"
                    Margin="0,0,0,4"/>
                        <TextBlock 
                    Text="音声が入力されているデバイスを選択" 
                    TextWrapping="Wrap"/>
                    </StackPanel>
                </ToolTip>
            </ComboBox.ToolTip>
        </ComboBox>

        <!-- おじいさんの動く古時計 -->
        <TextBlock x:Name="RecordingTimeLabel" 
           Text="録音時間" 
           Grid.Column="1"
           HorizontalAlignment="Left" 
           Margin="16,25,0,0" 
           VerticalAlignment="Top"
           FontSize="12" Grid.Row="1"/>

        <TextBlock x:Name="RecordingTimeText" 
           Grid.Column="1"
           HorizontalAlignment="Left" 
           Margin="14,46,0,0" 
           VerticalAlignment="Top"
           FontSize="16" 
           FontWeight="Medium"
           Text="00:00:00" Grid.Row="1" Foreground="{DynamicResource ComboBoxForegroundBrush}"/>

        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Width="80" Height="54" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" Margin="0,0,0,-16">
            <Image x:Name="RecImage" Source="Resource/rec.png"  Visibility="Hidden" Width="30" Height="30" RenderTransformOrigin="0.5,0.5"/>
            <Label x:Name="Label_status" Margin="0" Width="80" Height="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        </StackPanel>

        <Button x:Name="Button_Capture" 
                Click="Button_Capture_Click" 
                BorderBrush="{x:Null}" 
                Grid.Column="1" Grid.Row="1" 
                Width="48" Height="48"
                VerticalAlignment="Bottom"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Style="{StaticResource MaterialDesignIconButton}" 
                Foreground="{DynamicResource IconBrushLight}"
                materialDesign:RippleAssist.Feedback="Gray" HorizontalAlignment="Right">
            <materialDesign:PackIcon x:Name="CaptureButtonIcon" Kind="PlayCircleOutline" Width="48" Height="48"/>
        </Button>


        <Button x:Name="Button_Mute" 
                Click="Button_Mute_Click" 
                Grid.Column="2" Grid.Row="1" 
                Width="30" Height="30"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Style="{StaticResource MaterialDesignIconButton}" 
                Foreground="{DynamicResource IconBrushLight}"
                materialDesign:RippleAssist.Feedback="Gray" VerticalAlignment="Bottom" Margin="0,0,0,8">
            <materialDesign:PackIcon x:Name="MuteButtonIcon" Kind="Microphone" Width="26" Height="26"/>
        </Button>
        <ProgressBar
            IsIndeterminate="True"
            Style="{StaticResource MaterialDesignCircularProgressBar}" x:Name="progressRing" Grid.Column="2" Margin="0,35,46,0" HorizontalAlignment="Right" Width="20.5" Height="20.5" VerticalAlignment="Top" RenderTransformOrigin="1.35,0.552" Visibility="Hidden"/>

        <Button
            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
            Style="{StaticResource MaterialDesignIconButton}"
            ToolTip="デバイスの更新" 
            ToolTipService.Placement="Top" 
            ToolTipService.InitialShowDelay="200"
            Grid.Column="2" Grid.Row="3" 
            Width="24" Height="24" 
            Grid.ColumnSpan="1" 
            HorizontalAlignment="Right" VerticalAlignment="Bottom" 
            Click="ReloadDevices" 
            Foreground="{DynamicResource IconBrushLight}"
            materialDesign:RippleAssist.Feedback="Gray" Margin="0,0,0,-12">
            <materialDesign:PackIcon
            Kind="Reload" Height="24" Width="24"
        />
        </Button>

        <!--リアルタイムログのクリアボタン-->
        <Button x:Name="ClearButton"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Style="{StaticResource MaterialDesignIconButton}" 
                Width="28" Height="28" 
                Grid.Column="0" Grid.Row="0" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Top" 
                Margin="0,26,2,0"
                Foreground="{DynamicResource IconBrushLight}"
                Click="ClearButtonClick"
                ToolTip="ログをクリア" 
                ToolTipService.Placement="Top" 
                ToolTipService.InitialShowDelay="200"
                materialDesign:RippleAssist.Feedback="Gray">
            <materialDesign:PackIcon
                Kind="Refresh" Height="24" Width="24"/>
        </Button>
    </Grid>

</Window>